var searchIndex = JSON.parse('{\
"surreal_model_layer":{"doc":"This is an example of a Surreal Model Layer","t":"ENNGNFAFAFFFFENNGNLLLLLLLLLLLLLLLCDCLLLLAALLLLALLMALALLLALDDDDMLLLLLLLLLLLLLLLMMLLLMMLLLLLLLMMLMLLLLLLLLLLLLMMLMMMMMLLLLLLLLLLLLLLMLLLLMMLLLLENGNNNLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLCCGAAFISFFFFFFFFNENNNNNNGNLLLLLLLLLLLLLLLLLDDDDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMLLLMMMLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLMMLLLL","n":["Error","Generic","Model","Result","Surreal","delete_tables","error","main","model","test_datatypes","test_labelbamc","test_transactionbmc","test_users","Error","Generic","Model","Result","Surreal","borrow","borrow_mut","fmt","fmt","from","from","from","into","is_within","is_within","to_string","try_from","try_into","type_id","vzip","Error","ModelManager","Result","borrow","borrow_mut","clone","clone_into","datatypes","error","from","into","is_within","is_within","label","new","srdb","srdb","surreal_store","to_owned","transaction","try_from","try_into","type_id","users","vzip","DataTypes","DataTypesBmc","DataTypesForCreate","EmbededStruct","age","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create","data","datetime","deserialize","deserialize","deserialize","embed","float","fmt","fmt","fmt","from","from","from","from","hash","id","info","integer","into","into","into","into","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","json","last_name","list","list","naivedate","name","record","record_string","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tuple","type_id","type_id","type_id","type_id","ulid","uuid","vzip","vzip","vzip","vzip","Error","FailedToConnectToSurreal","Result","SerializeError","Store","SurrealError","borrow","borrow_mut","deserialize","fmt","fmt","from","from","from","into","is_within","is_within","serialize","to_string","try_from","try_into","type_id","vzip","Label","LabelBmc","LabelForCreate","LabelForUpdate","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create","create_with_id","delete","deserialize","fmt","fmt","fmt","from","from","from","from","get","id","into","into","into","into","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","label_name","label_name","label_name","list","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","Error","Result","SrDb","base_crud","error","new_surreal_connection","SurrealBmc","TABLE","base_create","base_create_with_id","base_create_with_ulid","base_delete","base_get","base_info","base_list","base_update","DeserializeError","Error","FailedToConnectToDatabase","FailedToCreate","FailedToDeleteIdNotFound","FailedToGet","FailedToSignInAsRoot","FailedToUpdate","Result","SurrealError","borrow","borrow_mut","deserialize","fmt","fmt","from","from","from","into","is_within","is_within","serialize","to_string","try_from","try_into","type_id","vzip","Transaction","TransactionBmc","TransactionForCreate","TransactionForUpdate","amount","amount","amount","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create","create_ulid","create_with_id","delete","deserialize","fmt","fmt","fmt","from","from","from","from","get","id","into","into","into","into","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","label","label","label","list","serialize","serialize","title","title","title","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","User","UserBmc","UserForCreate","UserForLogin","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create","deserialize","deserialize","fmt","fmt","fmt","from","from","from","from","get","id","id","into","into","into","into","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","list","pwd","pwd","salt","salt","salt","salt_token","salt_token","salt_token","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_name","user_name","vzip","vzip","vzip","vzip"],"q":[[0,"surreal_model_layer"],[13,"surreal_model_layer::error"],[33,"surreal_model_layer::model"],[58,"surreal_model_layer::model::datatypes"],[141,"surreal_model_layer::model::error"],[164,"surreal_model_layer::model::label"],[233,"surreal_model_layer::model::surreal_store"],[239,"surreal_model_layer::model::surreal_store::base_crud"],[249,"surreal_model_layer::model::surreal_store::error"],[276,"surreal_model_layer::model::transaction"],[352,"surreal_model_layer::model::users"]],"d":["","","","","","start with deleting existing tables to begin afresh","","call the test_… functions","BackendModelControllers for custom tables","playground function to test the datatypes roundtrip","test LabelBmc","test TransactionBmc","test UserBmc","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Holds the Surreal Client","","","","","","table to test the roundtrip of varying datatypes","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","specific data model. uses the base functions.","Init ModelManager with default Surreal Connection","","Surreal Client","base functions for the specific BMCs","","specific data model. uses the base functions.","","","","specific data model. uses the base functions.","","","Holds the functions and the table name for this Model.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Isomorphic(?) functions the Model Controllers can call","","returns a new surreal client connection logged in as …","Model Bmc Structs need to implement this trait.","","Create the data in <code>content</code> in the <code>TABLE</code> of the calling …","Same as <code>base_create</code>, but uses the given string as the id.","Same as <code>base_create</code>, but uses a ULID as the id","Delete a single record based on the given id","Get a single record based on the given id","","List all records","Update a single record based on the given id with the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,3,3,0,3,0,0,0,0,0,0,0,0,0,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,1,1,1,1,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1,0,0,0,0,15,36,15,16,17,36,15,16,17,15,16,17,15,16,17,36,16,17,15,16,17,17,17,15,16,17,36,15,16,17,17,16,36,17,36,15,16,17,36,36,15,15,16,16,17,17,17,15,36,17,17,17,17,17,15,16,17,15,16,17,36,15,16,17,36,15,16,17,17,36,15,16,17,17,17,36,15,16,17,0,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,37,23,24,25,37,23,24,25,23,24,25,23,24,25,37,37,37,23,23,24,25,37,23,24,25,37,23,37,23,24,25,37,37,23,23,24,24,25,25,23,24,25,37,24,25,23,24,25,37,23,24,25,37,23,24,25,37,23,24,25,37,37,23,24,25,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,22,0,22,22,22,22,22,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,0,30,31,32,39,30,31,32,39,30,31,32,30,31,32,30,31,32,39,39,39,39,30,30,31,32,39,30,31,32,39,30,39,30,31,32,39,39,30,30,31,31,32,32,30,31,32,39,31,32,30,31,32,30,31,32,39,30,31,32,39,30,31,32,39,30,31,32,39,39,30,31,32,0,0,0,0,40,33,34,35,40,33,34,35,33,34,35,33,34,35,40,33,35,33,34,35,40,33,34,35,40,33,35,40,33,34,35,40,40,33,33,34,34,35,35,40,33,35,33,34,35,33,34,35,34,33,34,35,40,33,34,35,40,33,34,35,40,33,34,35,33,34,40,33,34,35],"f":[0,0,0,0,0,[1,2],0,[[],2],0,[1,2],[1,2],[1,2],[1,2],0,0,0,0,0,[[]],[[]],[[3,4],[[6,[5]]]],[[3,4],7],[[]],[8,3],[9,3],[[]],[[],10],[[],10],[[],11],[[],6],[[],6],[[],12],[[]],0,0,0,[[]],[[]],[1,1],[[]],0,0,[[]],[[]],[[],10],[[],10],0,[[],[[6,[1,8]]]],[1,[[14,[13]]]],0,0,[[]],0,[[],6],[[],6],[[],12],0,[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,15],[16,16],[17,17],[[]],[[]],[[]],[[1,17],[[6,[16,8]]]],0,0,[18,[[6,[15]]]],[18,[[6,[16]]]],[18,[[6,[17]]]],0,0,[[15,4],7],[[16,4],7],[[17,4],7],[[]],[[]],[[]],[[]],0,0,[1,[[6,[19,8]]]],0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[1,[[6,[[20,[16]],8]]]],0,0,0,0,0,[[15,21],6],[[16,21],6],[[17,21],6],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[],12],[[],12],[[],12],[[],12],0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[18,[[6,[8]]]],[[8,4],7],[[8,4],[[6,[5]]]],[9,8],[22,8],[[]],[[]],[[],10],[[],10],[[8,21],6],[[],11],[[],6],[[],6],[[],12],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,23],[24,24],[25,25],[[]],[[]],[[]],[[1,24],[[6,[23,8]]]],[[1,24,11],[[6,[23,8]]]],[[1,11],[[6,[23,8]]]],[18,[[6,[23]]]],[[23,4],7],[[24,4],7],[[25,4],7],[[]],[[]],[[]],[[]],[[1,11],[[6,[23,8]]]],0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,[1,[[6,[[20,[23]],8]]]],[[24,21],6],[[25,21],6],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[],12],[[],12],[[1,11,25],[[6,[23,8]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],[[6,[[14,[13]],22]]]],0,0,[[1,26],[[6,[27,22]]]],[[1,26,28],[[6,[27,22]]]],[[1,26],[[6,[27,22]]]],[[1,28],[[6,[27,22]]]],[[1,28],[[6,[27,22]]]],[1,[[6,[19,22]]]],[1,[[6,[[20,[27]],22]]]],[[1,26,28],[[6,[27,22]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[18,[[6,[22]]]],[[22,4],[[6,[5]]]],[[22,4],7],[[]],[29,22],[9,22],[[]],[[],10],[[],10],[[22,21],6],[[],11],[[],6],[[],6],[[],12],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,30],[31,31],[32,32],[[]],[[]],[[]],[[1,31],[[6,[30,8]]]],[[1,31],[[6,[30,8]]]],[[1,11,31],[[6,[30,8]]]],[[1,11],[[6,[30,8]]]],[18,[[6,[30]]]],[[30,4],7],[[31,4],7],[[32,4],7],[[]],[[]],[[]],[[]],[[1,11],[[6,[30,8]]]],0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,[1,[[6,[[20,[30]],8]]]],[[31,21],6],[[32,21],6],0,0,0,[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[],12],[[],12],[[1,11,32],[[6,[30,8]]]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,33],[34,34],[35,35],[[]],[[]],[[]],[[1,28],[[6,[33,8]]]],[18,[[6,[33]]]],[18,[[6,[35]]]],[[33,4],7],[[34,4],7],[[35,4],7],[[]],[[]],[[]],[[]],[[1,11],[[6,[33,8]]]],0,0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[1,[[6,[[20,[35]],8]]]],0,0,0,0,0,0,0,0,[[34,21],6],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[],12],[[],12],0,0,[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"ModelManager"],[6,"Result"],[4,"Error"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[4,"Error"],[4,"Error"],[15,"bool"],[3,"String"],[3,"TypeId"],[3,"Client"],[3,"Surreal"],[3,"EmbededStruct"],[3,"DataTypes"],[3,"DataTypesForCreate"],[8,"Deserializer"],[4,"Value"],[3,"Vec"],[8,"Serializer"],[4,"Error"],[3,"Label"],[3,"LabelForCreate"],[3,"LabelForUpdate"],[8,"Serialize"],[8,"DeserializeOwned"],[15,"str"],[3,"Error"],[3,"Transaction"],[3,"TransactionForCreate"],[3,"TransactionForUpdate"],[3,"User"],[3,"UserForCreate"],[3,"UserForLogin"],[3,"DataTypesBmc"],[3,"LabelBmc"],[8,"SurrealBmc"],[3,"TransactionBmc"],[3,"UserBmc"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
