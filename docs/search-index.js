var searchIndex = JSON.parse('{\
"surreal_model_layer":{"doc":"This is an example of a Surreal Model Layer","t":"ENNGNAFAFFFFFFENNGNLLLLLLLLLLLLLLLCDCLLLLAAALLLLALLMALALLLALDDDDMLLLLLLLLLLLLLLLMMLLLMMLLLLLLLMMLMLLLLLLLLLLLLMMLMMMMMLLLLLLLLLLLLLLMLLLLMMLLLLDLLLLLLLLLLLLENGNNNLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLCCGISAAAFFFFFFFFFFFFNENNNNNNNGNLLLLLLLLLLLLLLLLLDDDDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMLLLMMMLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLMMLLLL","n":["Error","Generic","Model","Result","Surreal","error","main","model","test_datatypes","test_delete_tables","test_edges","test_labelbmc","test_transactionbmc","test_users","Error","Generic","Model","Result","Surreal","borrow","borrow_mut","fmt","fmt","from","from","from","into","is_within","is_within","to_string","try_from","try_into","type_id","vzip","Error","ModelManager","Result","borrow","borrow_mut","clone","clone_into","datatypes","edge","error","from","into","is_within","is_within","label","new","srdb","srdb","surreal_store","to_owned","transaction","try_from","try_into","type_id","users","vzip","DataTypes","DataTypesBmc","DataTypesForCreate","EmbededStruct","age","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create","data","datetime","deserialize","deserialize","deserialize","embed","float","fmt","fmt","fmt","from","from","from","from","hash","id","info","integer","into","into","into","into","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","json","last_name","list","list","naivedate","name","record","record_string","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tuple","type_id","type_id","type_id","type_id","ulid","uuid","vzip","vzip","vzip","vzip","EdgeBmc","borrow","borrow_mut","connect","from","into","is_within","is_within","list","try_from","try_into","type_id","vzip","Error","FailedToConnectToSurreal","Result","SerializeError","Store","SurrealError","borrow","borrow_mut","deserialize","fmt","fmt","from","from","from","into","is_within","is_within","serialize","to_string","try_from","try_into","type_id","vzip","Label","LabelBmc","LabelForCreate","LabelForUpdate","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create","create_with_id","delete","deserialize","fmt","fmt","fmt","from","from","from","from","get","id","into","into","into","into","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","label_name","label_name","label_name","list","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","Error","Result","SrDb","SurrealBmc","TABLE","base_crud","base_graph","error","new_surreal_connection","base_create","base_create_with_id","base_create_with_ulid","base_delete","base_get","base_info","base_list","base_update","base_connect","base_delete","base_list_connections","DeserializeError","Error","FailedToConnectToDatabase","FailedToCreate","FailedToCreateGraphConnection","FailedToDeleteIdNotFound","FailedToGet","FailedToSignInAsRoot","FailedToUpdate","Result","SurrealError","borrow","borrow_mut","deserialize","fmt","fmt","from","from","from","into","is_within","is_within","serialize","to_string","try_from","try_into","type_id","vzip","Transaction","TransactionBmc","TransactionForCreate","TransactionForUpdate","amount","amount","amount","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create","create_ulid","create_with_id","delete","deserialize","fmt","fmt","fmt","from","from","from","from","get","id","into","into","into","into","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","label","label","label","list","serialize","serialize","title","title","title","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","User","UserBmc","UserForCreate","UserForLogin","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create","deserialize","deserialize","fmt","fmt","fmt","from","from","from","from","get","id","id","into","into","into","into","is_within","is_within","is_within","is_within","is_within","is_within","is_within","is_within","list","pwd","pwd","salt","salt","salt","salt_token","salt_token","salt_token","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_name","user_name","vzip","vzip","vzip","vzip"],"q":[[0,"surreal_model_layer"],[14,"surreal_model_layer::error"],[34,"surreal_model_layer::model"],[60,"surreal_model_layer::model::datatypes"],[143,"surreal_model_layer::model::edge"],[156,"surreal_model_layer::model::error"],[179,"surreal_model_layer::model::label"],[248,"surreal_model_layer::model::surreal_store"],[257,"surreal_model_layer::model::surreal_store::base_crud"],[265,"surreal_model_layer::model::surreal_store::base_graph"],[268,"surreal_model_layer::model::surreal_store::error"],[296,"surreal_model_layer::model::transaction"],[372,"surreal_model_layer::model::users"]],"d":["","","","","","holds the model errors","call the test_… functions","BackendModelControllers for custom tables. Start looking …","playground function to test the datatypes roundtrip","start with deleting existing tables to begin afresh","","test LabelBmc","test TransactionBmc","test UserBmc","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Holds the Surreal Client","","","","","","DatatypesBmc. Table to test the roundtrip of varying …","EdgeBmc. graph connections","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","LabelBmc. Everything for the <code>label</code> table","Init ModelManager with default Surreal Connection","","Surreal Client","base functions for the specific BMCs","","TransactionBmc. Everything for the <code>transaction</code> table","","","","UserBmc. Everything for the <code>user</code> table","","","Holds the functions and the table name for this Model.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Connect two records","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","List all connections","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Model Bmc Structs need to implement this trait.","","Isomorphic(?) functions the Model Controllers can call","","","returns a new surreal client connection logged in as …","Create the data in <code>content</code> in the <code>TABLE</code> of the calling …","Same as <code>base_create</code>, but uses the given string as the id.","Same as <code>base_create</code>, but uses a ULID as the id","Delete a single record based on the given id","Get a single record based on the given id","","List all records","Update a single record based on the given id with the …","Connect two records","Delete a connection","List all connections","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unitstruct which holds all functions for the <code>user</code> table","","","","","","","","","","","","","","","","","Create a new user with new_user_name as id in table user","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a user by id (String)","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","List all users","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,3,3,0,3,0,0,0,0,0,0,0,0,0,0,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,2,2,2,2,0,0,0,2,2,2,2,0,2,2,2,0,2,0,2,2,2,0,2,0,0,0,0,15,37,15,16,17,37,15,16,17,15,16,17,15,16,17,37,16,17,15,16,17,17,17,15,16,17,37,15,16,17,17,16,37,17,37,15,16,17,37,37,15,15,16,16,17,17,17,15,37,17,17,17,17,17,15,16,17,15,16,17,37,15,16,17,37,15,16,17,17,37,15,16,17,17,17,37,15,16,17,0,38,38,38,38,38,38,38,38,38,38,38,38,0,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,39,24,25,26,39,24,25,26,24,25,26,24,25,26,39,39,39,24,24,25,26,39,24,25,26,39,24,39,24,25,26,39,39,24,24,25,25,26,26,24,25,26,39,25,26,24,25,26,39,24,25,26,39,24,25,26,39,24,25,26,39,39,24,25,26,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,23,23,23,23,23,23,23,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,31,32,33,41,31,32,33,41,31,32,33,31,32,33,31,32,33,41,41,41,41,31,31,32,33,41,31,32,33,41,31,41,31,32,33,41,41,31,31,32,32,33,33,31,32,33,41,32,33,31,32,33,31,32,33,41,31,32,33,41,31,32,33,41,31,32,33,41,41,31,32,33,0,0,0,0,42,34,35,36,42,34,35,36,34,35,36,34,35,36,42,34,36,34,35,36,42,34,35,36,42,34,36,42,34,35,36,42,42,34,34,35,35,36,36,42,34,36,34,35,36,34,35,36,35,34,35,36,42,34,35,36,42,34,35,36,42,34,35,36,34,35,42,34,35,36],"f":[0,0,0,0,0,0,[[],1],0,[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],0,0,0,0,0,[[]],[[]],[[3,4],[[6,[5]]]],[[3,4],7],[8,3],[9,3],[[]],[[]],[[],10],[[],10],[[],11],[[],6],[[],6],[[],12],[[]],0,0,0,[[]],[[]],[2,2],[[]],0,0,0,[[]],[[]],[[],10],[[],10],0,[[],[[6,[2,9]]]],[2,[[14,[13]]]],0,0,[[]],0,[[],6],[[],6],[[],12],0,[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,15],[16,16],[17,17],[[]],[[]],[[]],[[2,17],[[6,[16,9]]]],0,0,[18,[[6,[15]]]],[18,[[6,[16]]]],[18,[[6,[17]]]],0,0,[[15,4],7],[[16,4],7],[[17,4],7],[[]],[[]],[[]],[[]],0,0,[2,[[6,[19,9]]]],0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[2,[[6,[[20,[16]],9]]]],0,0,0,0,0,[[15,21],6],[[16,21],6],[[17,21],6],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[],12],[[],12],[[],12],[[],12],0,0,[[]],[[]],[[]],[[]],0,[[]],[[]],[[2,22,22],[[6,[19,9]]]],[[]],[[]],[[],10],[[],10],[2,[[6,[[20,[19]],9]]]],[[],6],[[],6],[[],12],[[]],0,0,0,0,0,0,[[]],[[]],[18,[[6,[9]]]],[[9,4],7],[[9,4],[[6,[5]]]],[8,9],[23,9],[[]],[[]],[[],10],[[],10],[[9,21],6],[[],11],[[],6],[[],6],[[],12],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,24],[25,25],[26,26],[[]],[[]],[[]],[[2,25],[[6,[24,9]]]],[[2,25,11],[[6,[24,9]]]],[[2,11],[[6,[24,9]]]],[18,[[6,[24]]]],[[24,4],7],[[25,4],7],[[26,4],7],[[]],[[]],[[]],[[]],[[2,11],[[6,[24,9]]]],0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,[2,[[6,[[20,[24]],9]]]],[[25,21],6],[[26,21],6],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[],12],[[],12],[[2,11,26],[[6,[24,9]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],[[6,[[14,[13]],23]]]],[[2,27],[[6,[28,23]]]],[[2,27,29],[[6,[28,23]]]],[[2,27],[[6,[28,23]]]],[[2,29],[[6,[28,23]]]],[[2,29],[[6,[28,23]]]],[2,[[6,[19,23]]]],[2,[[6,[[20,[28]],23]]]],[[2,27,29],[[6,[28,23]]]],[[2,22,22],[[6,[28,23]]]],[[2,22],[[6,[28,23]]]],[2,[[6,[[20,[28]],23]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[18,[[6,[23]]]],[[23,4],7],[[23,4],[[6,[5]]]],[8,23],[30,23],[[]],[[]],[[],10],[[],10],[[23,21],6],[[],11],[[],6],[[],6],[[],12],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,31],[32,32],[33,33],[[]],[[]],[[]],[[2,32],[[6,[31,9]]]],[[2,32],[[6,[31,9]]]],[[2,11,32],[[6,[31,9]]]],[[2,11],[[6,[31,9]]]],[18,[[6,[31]]]],[[31,4],7],[[32,4],7],[[33,4],7],[[]],[[]],[[]],[[]],[[2,11],[[6,[31,9]]]],0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,[2,[[6,[[20,[31]],9]]]],[[32,21],6],[[33,21],6],0,0,0,[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[],12],[[],12],[[2,11,33],[[6,[31,9]]]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,34],[35,35],[36,36],[[]],[[]],[[]],[[2,29],[[6,[34,9]]]],[18,[[6,[34]]]],[18,[[6,[36]]]],[[34,4],7],[[35,4],7],[[36,4],7],[[]],[[]],[[]],[[]],[[2,11],[[6,[34,9]]]],0,0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[2,[[6,[[20,[36]],9]]]],0,0,0,0,0,0,0,0,[[35,21],6],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[],12],[[],12],0,0,[[]],[[]],[[]],[[]]],"c":[],"p":[[6,"Result"],[3,"ModelManager"],[4,"Error"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[4,"Error"],[4,"Error"],[15,"bool"],[3,"String"],[3,"TypeId"],[3,"Client"],[3,"Surreal"],[3,"EmbededStruct"],[3,"DataTypes"],[3,"DataTypesForCreate"],[8,"Deserializer"],[4,"Value"],[3,"Vec"],[8,"Serializer"],[3,"Thing"],[4,"Error"],[3,"Label"],[3,"LabelForCreate"],[3,"LabelForUpdate"],[8,"Serialize"],[8,"DeserializeOwned"],[15,"str"],[3,"Error"],[3,"Transaction"],[3,"TransactionForCreate"],[3,"TransactionForUpdate"],[3,"User"],[3,"UserForCreate"],[3,"UserForLogin"],[3,"DataTypesBmc"],[3,"EdgeBmc"],[3,"LabelBmc"],[8,"SurrealBmc"],[3,"TransactionBmc"],[3,"UserBmc"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
